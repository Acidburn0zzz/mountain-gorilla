#!/bin/bash
#
# Wrapper to call the usb-headnode build.
#
# Mainly this wrapper is here to encapsulate the additional hack
# local static HTTP server to the local MG "bits" dir that is
# setup for each usb-headnode build. If the need for that
# static server goes away (e.g. by updating usb-headnode/bin/build-image
# to be able to pull from a directory instead of just HTTP) then
# this tool can probably go as well.

if [ "$TRACE" != "" ]; then
    export PS4='${BASH_SOURCE}:${LINENO}: '
    set -o xtrace
fi
set -o errexit
set -o pipefail


#---- config, globals

TOP=$(cd $(dirname $0)/../; pwd)
BITS_DIR=




#---- internal support functions

function fatal {
    echo "$(basename $0): error: $1"
    exit 1
}


function errexit {
    staticserver_stop || true
    [[ $1 -ne 0 ]] || exit 0
    fatal "error exit status $1 at line $2"
}

function print_help() {
    echo "Call the usb-headnode build in 'build/usb-headnode'."
    echo ""
    echo "Usage:"
    echo "  ./tools/build-usb-headnode TIMESTAMP BITS_DIR ARGS"
    echo ""
    echo "Options:"
    echo "  -h           Print this help and exit."
    echo ""
    echo "Where 'ARGS' are arguments for usb-headnode's 'bin/build-image' script."
    exit 0
}

function staticserver_start() {
    staticserver_stop || true
    (cd ${BITS_DIR}; python -m SimpleHTTPServer)&
    sleep 1
}

function staticserver_stop() {
    ps -ef | grep 'Simple[H]TTPServer' | awk '{print $2}' | xargs kill 2>/dev/null
}


function check_npm() {
    if [[ ! -d $HOME/opt/npm ]]; then
        echo "* * *"
        echo "The usb-headnode build needs npm 1.x. For the MG build we *don't*"
        echo "put that on the default path, because the agent builds currently"
        echo "need npm 0.2.x. Therefore we choose to require an npm 1.x install"
        echo "in '$HOME/opt/npm'. You can install that as follows:"
        echo ""
        echo "    # ensure have node >= 0.4.9"
        echo "    pkgin -y in nodejs-0.4.9"
        echo "    # install npm is custom location (to not collide with npm 0.2)"
        echo "    curl http://npmjs.org/install.sh | npm_config_prefix=$HOME/opt/npm clean=no sh"
        echo "* * *"
        fatal "no npm 1.x installed at '$HOME/opt/npm'"
    fi
}



#---- mainline

trap 'errexit $? $LINENO' EXIT

while getopts "h" opt; do
    case $opt in
        h) print_help ;;
        ?) fatal "unknown option: $opt" ;;
    esac
    shift $((OPTIND-1))
done

TIMESTAMP=$1
if [[ ! -d "$2" ]]; then
    fatal "given BITS_DIR, '$2', does not exist"
fi
BITS_DIR=$(cd $2; pwd)
shift; shift
ARGS=$*
if [[ -z "$ARGS" ]]; then
    fatal "no args given (see '$0 -h')"
fi


check_npm

staticserver_start
(cd ${TOP}/build/usb-headnode && \
    PATH=$HOME/opt/npm/bin:${PATH} \
    MASTER_PLATFORM_URL=http://localhost:8000 \
    TIMESTAMP=${TIMESTAMP} \
    PLATFORM_FILE=${BITS_DIR}/platform-${TIMESTAMP}.tgz  \
    ZONE_DIR=${TOP}/build \
    ./bin/build-image $ARGS)
staticserver_stop


