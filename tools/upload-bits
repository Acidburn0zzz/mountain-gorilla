#!/bin/bash
#
# Upload (possibly parts of) the bits dir.

if [ "$TRACE" != "" ]; then
    export PS4='${BASH_SOURCE}:${LINENO}: '
    set -o xtrace
fi
set -o errexit



#---- config, globals

TOP=$(cd $(dirname $0)/../; pwd)
BITS_DIR=bits

SSH_OPTIONS="-q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
SCP="scp $SSH_OPTIONS" 
SSH="ssh $SSH_OPTIONS" 



#---- internal support functions

function fatal {
    echo "$(basename $0): error: $1"
    exit 1
}


function errexit {
    [[ $1 -ne 0 ]] || exit 0
    fatal "error exit status $1 at line $2"
}


function print_help() {
    echo "Usage:"
    echo "  ./tools/upload-bits [-r] [-f FILE] BRANCH TIMESTAMP UPLOAD-BASE-DIR"
    echo ""
    echo "Upload bits. The UPLOAD-BASE-DIR is presumed to be a remote dir."
    echo ""
    echo "Options:"
    echo "  -r           Only upload the 'release/' dir."
    echo "  -h           Print this help and exit."
    echo "  -f FILE      Upload only file FILE"
    echo ""
    echo "Examples:"
    echo "  ./tool/upload-bits release-20110922 20110927T143319Z stuff@stuff.joyent.us:builds/nightly"
    exit 0
}




#---- mainline

trap 'errexit $? $LINENO' EXIT

RELEASE_ONLY=0
while getopts "hrf:" opt; do
    case $opt in
        h) print_help ;;
        r) RELEASE_ONLY=1 ;;
        f) RELEASE_FILE_ONLY=1; RELEASE_FILE=$OPTARG ;;
        ?) fatal "unknown option: $opt" ;;
    esac
    shift $((OPTIND-1))
done

BRANCH=$1
TIMESTAMP=$2
UPLOAD_BASE_DIR=$3
UPLOAD_SERVER=$(echo "$UPLOAD_BASE_DIR" | awk -F: '{print $1}')
UPLOAD_BASE_LOCALDIR=$(echo "$UPLOAD_BASE_DIR" | awk -F: '{print $2}')

# Determine the upload dir. If there is already a "$BRANCH-$TIMESTAMP"
# dir, then we append a "-N" serial number.
existing_upload_dirs=$($SSH $UPLOAD_SERVER ls -d $UPLOAD_BASE_LOCALDIR/$BRANCH-$TIMESTAMP* $UPLOAD_BASE_LOCALDIR/.$BRANCH-$TIMESTAMP* 2>/dev/null || true)
last_upload_dir=$(echo $existing_upload_dirs | tail -1)
if [[ -z "$last_upload_dir" ]]; then
    upload_subdir=$BRANCH-$TIMESTAMP
else
    serial=$(echo $last_upload_dir | awk -F- '{print $NF}')
    if [[ "${serial:(-1)}" == "Z" ]]; then
        next_serial=2
    else
        next_serial=$(( $serial + 1 ))
    fi
    upload_subdir=$BRANCH-$TIMESTAMP-$next_serial
fi

# Upload to '.'-prefixed dir to hide it until fully uploaded.
echo "Uploading bits to <$UPLOAD_SERVER:$UPLOAD_BASE_LOCALDIR/$upload_subdir/>."
if [[ "$RELEASE_FILE_ONLY" == "1" ]]; then
    $SSH $UPLOAD_SERVER mkdir -p $UPLOAD_BASE_LOCALDIR/.$upload_subdir
    #$SCP $RELEASE_FILE_ONLY $UPLOAD_SERVER:$UPLOAD_BASE_LOCALDIR/.$upload_subdir/
    rsync -e "$SSH" -av $RELEASE_FILE $UPLOAD_SERVER:$UPLOAD_BASE_LOCALDIR/.$upload_subdir/
elif [[ "$RELEASE_ONLY" == "1" ]]; then
    $SSH $UPLOAD_SERVER mkdir $UPLOAD_BASE_LOCALDIR/.$upload_subdir
    rsync -e "$SSH" -av $BITS_DIR/release/ $UPLOAD_SERVER:$UPLOAD_BASE_LOCALDIR/.$upload_subdir/release/
else
    rsync -e "$SSH" -av $BITS_DIR/ $UPLOAD_SERVER:$UPLOAD_BASE_LOCALDIR/.$upload_subdir/
fi

# Unhide and add a "$BRANCH-$latest" symlink.
$SSH $UPLOAD_SERVER mv $UPLOAD_BASE_LOCALDIR/.$upload_subdir/ $UPLOAD_BASE_LOCALDIR/$upload_subdir/
$SSH $UPLOAD_SERVER "(cd $UPLOAD_BASE_LOCALDIR && rm -f $BRANCH-latest && ln -s $upload_subdir $BRANCH-latest)"

# Special note for stuff.joyent.us.
if [[ "$UPLOAD_SERVER" == "stuff@stuff.joyent.us" ]]; then
    echo "Uploaded to <https://stuff.joyent.us/stuff/$UPLOAD_BASE_LOCALDIR/$upload_subdir/>."
fi

